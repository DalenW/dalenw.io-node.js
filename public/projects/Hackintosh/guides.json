{
    "guides": [{
            "name": "Test",
            "image": "Test",
            "folder": "test",
            "show": false,
            "guide": [
                "Line one",
                "Line 2",
                "/c This is code. \n\t code 2 \n idk",
                "test line",
                "test `quote` mmk",
                "/i Test.png",
                "/s This is a section title.",
                "/o Ordered List 1",
                "/o Ordered List 2",
                "/o Three",
                "/v video.mp4"
            ]
        },
        {
            "name": "Creating a Bootable USB",
            "image": "USB",
            "folder": "usb",
            "show": true,
            "guide": [
                "/s Downloading OSX",
                "Download OSX Sierra <a href=\"http://goo.gl/vIokuL\" class=\"link\">here</a> or on the AppStore. Anything else will have to be download from the AppStore.",
                "Now you need to install OSX Sierra to the USB",

                "/s Creating the Bootable USB",
                "Download <a href=\"https://macdaddy.io/install-disk-creator/\" class=\"link\">this software</a> to quickly install OSX Sierra on a USB. The reason I use this and not terminal because its quick, easy, and has a loading bar. The software is easy to figure out.",
                "If the above software doesn’t work for some reason, I got you covered. You can use a terminal command to install it, provided that your `Install OSX Sierra.app` is in the Applications folder. If not, just modify the command. Just change `NAME` to the name of your USB drive. `sudo /Applications/Install\\ macOS\\ Sierra.app/Contents/Resources/createinstallmedia --volume /Volumes/NAME --applicationpath /Applications/Install\\ macOS\\ Sierra.app --nointeraction &&say Done`",
                "Now we're going to install Clover. You can download it <a href=\"https://sourceforge.net/projects/cloverefiboot/files/latest/download\" class=\"link\">here</a>.",

                "/s Installing Clover",
                "/o  When you get to the `Installation Type` tab, wait.",
                "/o Click on `Change Install Location`.",
                "/o Select the USB dirve and continue.",
                "/o Now click on `customize`.",
                "/o Check `Install for UEFI Booting Only`, and under Drivers64UEFI, check `OsxSptioFix2Drv-64` and `PartitionDXE-64`.",

                "Now you can install Clover. But before you boot, you still have to configure Clover."
            ]
        },
        {
            "name": "Configuring Clover",
            "image": "Clover",
            "folder": "clover",
            "show": true,
            "guide": [
                "/s Clover Configuator",
                "The first thing that you’ll want to do is download clover configurator. It’s a must have tool to edit the clover config file. You can download it <a href=\"https://goo.gl/JD1Gph\" class=\"link\">here</a>.",

                "/s Mounting the EFI Partition",
                "Clover Configuator has a nice EFI Partition mounting tool. Under the `Mount EFI` tab, the first thing you’ll do is press `Check Partition`.",
                "Find the disk or USB with your EFI partition. USBs will be at the bottom. Once you’ve found it, press `Mount EFI Partition`, select the disk, and press `OK`.",
                "After its mounted, open the partition by pressing the button `Open Partition`.",
                "Navigate to the Clover folder and open the config.plist with Clover Configurator.",

                "/s Configuring the Config",
                "/o The first thing that you’ll want to do is go to the `Acpi` tab. Under `Fixes`, uncheck everything in both the `Old way` and `New way`.",
                "/i 1.png",
                "/i 2.png",
                "/o Under the `Boot tab`, check `Verbose`, `dart=0`, and `nv_disable=1`.",
                "/i 3.png",
                "/o IF you are running on Integrated Intel graphics, under the `Graphics` tab, check `Inject Intel`.",
                "/i 4.png",
                "/o The `SMBIOS` tab is where things get fun. The `SMBIOS` for each configuration is different. For this example I will be using an Intel/NVIDIA configuration which is `iMac14,2`. Below I will update with the `SMBIOS` for each configuration. \n\n Click the Magic Wand, select your product (iMac), and under the drop down menu on the top left, select `iMac (14,2)`. Then press the two `Shake` buttons a few times to get a unique serial number.",
                "/i 5.png",
                "/o After pressing `OK`, copy the `Serial Number` and paste it in `Board Serial Number`. Then, add five random letters in caps.",
                "/i 6.png",
                "/o Next, you’ll open terminal and run the `uuidgen` command. Paste whatever it spits out the `SmUUID` box.",
                "/i 7.png",
                "You are now done and you can boot into your Mac. Enjoy.",

                "/s Video if you want it",
                "/v video.mp4",

                "/s SMBIOS List",
                "Last Updated March 30, 2017",
                "\n",
                "Intel/NVIDIA Desktop - `iMac14,2`",
                "Intel/Integrated - Try to choose the Macbook closest to your CPU's manufactured year.",
                "Intel Skylake/Integrated - `MacBookPro11,2` or `MacBookPro12,1`",
                "Intel/AMD Desktop - `MacPro5,1`"
            ]
        },
        {
            "name": "Installing OSX",
            "image": "InstallingOSX",
            "folder": "installingosx",
            "show": true,
            "guide": [
                "/s Erasing the Disk",
                "Once the installer boots, enter the `Disk Manager` tool.",
                "Select the disk you want, and erase it. But make sure that the Partition Map is `GUID` and that the disk type is `Journaled` or whatever it's called.",

                "/s Installing the OS",
                "Now you can run the installer. Make sure to install it to that disk you just wiped.",

                "/s Installing Video Drivers",
                "Unlike other Operating Systems, the video drivers for OSX are totally dependent on which version of the OS you are running. Which means you'll have to google the OS version and driver type to find the right drivers. For example, `NVIDIA web drivers 10.12.4`.",
                "You can find what version of OSX you're running in `About this Mac`.",
                "Install the drivers. You'll restart, but before you boot into OSX again, go to `Options` and edit the `Boot Args`. Remove `nv_disable=1` and replace it with `nvda_drv=1`. It's not needed to add the `nvda_drv=1`, but I still do it to be safe. You still have to remove the `nv_disable=1`.",

                "/s Installing Clover",
                "This is the same process as installing Clover on a USB, but instead you'll be installing it on you're OSX drive. But, once installed, copy the `config.plist` and any kexts and drivers you added from the USB and place them in Clover installation on the OSX drive.",
                "Now you can unplug the USB and boot from the OSX drive. If the boot option doesn't show up, go to my Manually Adding the Boot Option guide."
            ]
        },
        {
            "name": "Manually Adding the Boot Option",
            "image": "BootOption",
            "folder": "bootoption",
            "show": true,
            "guide": [
                "/s Warning",
                "Only do this if the Clover boot option doesn't show up in your bios.",

                "/s Adding the Boot Option",
                "While in the Clover boot screen, use the arrow keys to enter the `UEFI Shell`.",
                "Now you should see a terminal with `Shell> `.",
                "Type `map fs*` to show all the partitions.",
                "Now we need to find the partition with clover installed. Use `fsN:` to enter a partition. `N` is the number, so for example, `fs2:`. Because you booted Clover off of a USB, it will not be partition 0 or 1. Those are USB partitions. So if you find a Clover folder on there its not gonna be it.",
                "Once inside the partition, type `ls` to list the parititon contents. If you see an `EFI` folder, you're in an EFI partition. You can type `cd EFI` to enter the folder, then `ls` again to list the contents of that folder to find the Clover folder.",
                "Once you've found the Clover folder, enter it. Type `ls` to make sure that you're in the same folder as a file names `CLOVERX64.efi`.",
                "Now to add the boot option. Type `bcfg boot add 0 CLOVERX64.efi \"Clover\"`.",
                "You can check if the option was added with `bcfg boot dump`.",
                "Now type `reset` to restart the computer and you can boot clover from the HDD."
            ]
        },
        {
            "name": "Automount the EFI Partition",
            "image": "AutomountEFI",
            "folder": "automountefi",
            "show": true,
            "guide": [
                "/s Finding the Partition",
                "Open your terminal and run `diskutil list`.",
                "Find the disk and partition with your Clover install. In this case we'll use `disk0s1`. The EFI partition will always be partiton 1.",

                "/s Writing the Script",
                "First create a file using a text editor. The file we create won't have an extension.",
                "Here's the basic script for a terminal file.",
                "/c #!/bin/bash \n\n function main () \n { \n \t exit 0 \n } \n\n main",
                "To make this fancy, we're gonna add a title in our script.\n `echo \\#\\#\\# Mounting EFI Partition \\#\\#\\#\\`",
                "I like adding `diskutil list` incase the script fails to find the partition.",
                "Then, we need a place to store our EFI partition. We can do that with this line of code. \n `sudo mkdir /Volumes/EFI`",
                "Then we are going to mount the partition into the directory we made. \n `sudo mount -t /dev/disk0s1 /Volumes/EFI`",
                "Your file should look like this now.",
                "/c #!/bin/bash \n\n function main () \n { \n \t echo \\#\\#\\# Mounting EFI Partition \\#\\#\\#\\ \n\t sudo mkdir /Volumes/EFI \n\t sudo mount -t /dev/disk0s1 /Volumes/EFI \n\t exit 0 \n } \n\n main",
                "That's basically it, but we want to make it better.",

                "/s Making it Better",
                "We're gonna make it open the folder for us. This is done by",
                "/c cd /Volumes/EFI/EFI \n open .",
                "Let's also add an ending title. \n `\\#\\#\\# Done \\#\\#\\#\\`",
                "Now lets add a variable incase the disk changes. Above `function main ()`, create a variable named disk and set it to whatever disk the partition is on. This is done by `disk=0`. Now, on the line where we mount the disk to the folder change the `0` after disk to `\"$disk\". Now the line looks like this. \n `sudo mount -t msdos /dev/disk\"$disk\"s1 /Volumes/EFI`",

                "/s Full Script",
                "/c #!/bin/bash \n\n function main () \n { \n \t echo \\#\\#\\# Mounting EFI Partition \\#\\#\\#\\ \n\n\t sudo mkdir /Volumes/EFI \n\t sudo mount -t msdos /dev/disk\"$disk\"s1 /Volumes/EFI \n\n\t cd /Volumes/EFI/EFI \n\t open . \n\n\t \\#\\#\\# Done \\#\\#\\#\\ \n\n\t exit 0 \n } \n\n main",

                "/s Making the Script Bootable",
                "Open terminal and go to the script. If the script is on your desktop, just type `cd Desktop`.",
                "Then you're gonna type `chmod +x \"name of file\"`"
            ]
        }
    ]
}